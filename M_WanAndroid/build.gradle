if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: './bintray.gradle'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    resourcePrefix "m_wan_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ------------------------------    test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_core_version"

    if (isBuildModule.toBoolean()) {
        // leakcanary
        debugApi "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
        releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    }

    if (isUseAAR.toBoolean() || isBuildModule.toBoolean()) {
//        implementation "com.shendx.Ark:BaseLib:$base_lib_version"
        implementation project(':BaseLib')
    } else {
        implementation project(':BaseLib')
    }
    // ARouter
    kapt "com.alibaba:arouter-compiler:$arouter_compiler_version"
}
