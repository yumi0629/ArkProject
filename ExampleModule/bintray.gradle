group = "com.shendx.Ark"
version = example_module_version //定义版本标识

def packageName = "example_module" //需更改，这个名字就是你在Bintray上创建Package的名字，这里会查询，如果此包不存在就会创建一个。

def repoName = "maven" //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库

def siteUrl = 'https://github.com/shendanxiang/ArkProject'                        // #CONFIG# // project homepage
def gitUrl = 'https://github.com/shendanxiang/ArkProject.git'                     // #CONFIG# // project git

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                description 'A View control with a high profile IOS Alert'
                name ''  // 可默认，项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer { //  可默认，开发者信息
                        id 'shendx'
                        name 'shendx'
                        email 'shenky369@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//Properties properties = new Properties()
// 加载本地配置
//properties.load(project.rootProject.file('./bintray.properties').newDataInputStream())
//这个是和你bintray上面创建的package(项目)是对应的
bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
    user = BINTRAY_USER
    key = BINTRAY_KEY
    configurations = ['archives']
    pkg {
        repo = repoName  //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库
        name = packageName  //需更改，这个名字就是你在Bintray上创建Package的名字，这里会查询，如果此包不存在就会创建一个。
        userOrg = 'shendx'    //组织名称 organization
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

//以下内容用于发布SNAPSHOT版本，如果不需要可以移除。
//参考自：https://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin

//apply plugin: "com.jfrog.artifactory"
//artifactory {
//    contextUrl = 'http://oss.jfrog.org/artifactory' //The base Artifactory URL if not overridden by the publisher/resolver
//    resolve {
//        repository {
//            repoKey = 'libs-release'
//        }
//    }
//    publish {
//        repository {
//            repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to
//            username = bintray.user
//            password = bintray.key
//            maven = true
//        }
//        defaults {
//            //这里的名字和前面bintray.configurations的值一致即可，会将其包含的输出上传到jfrog上去
//            publishConfigs('archives')
//        }
//    }
//}
